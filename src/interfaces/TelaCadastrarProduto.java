/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package interfaces;

import bancodados.ProdutoMateriaBD;
import java.awt.Color;
import static java.awt.image.ImageObserver.WIDTH;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import modelo.classes.ProdutoMateria;
import modelo.tabelas.ModeloTabelaProdutoMateria;

/**
 *
 * @author alunov2
 */
public class TelaCadastrarProduto extends javax.swing.JDialog {

    ProdutoMateriaBD conexaoTabelaProdutoMateria=new ProdutoMateriaBD();
    ModeloTabelaProdutoMateria modeloTabelaProdutoMateria=new ModeloTabelaProdutoMateria();
    ProdutoMateria produtoMateriaAntigo=null;
    ProdutoMateria produtoMateriaNovo=null;
    
    /* ADICIONANDO ICONE AO PROGRAMA */
    ImageIcon icone = new ImageIcon(getClass().getResource("/imagens/add25x25BLUE.png"));
    
    /**
     * Creates new form TelaCadastrarProduto
     */
    public TelaCadastrarProduto(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        this.setLocationRelativeTo(null);
        this.setSize(390, 499);
        modeloTabelaProdutoMateria.inserirlistaProdutoMateria(conexaoTabelaProdutoMateria.selecionarTodosProdutosMateria());
        tbListaProdutos.setModel(modeloTabelaProdutoMateria);
       // modeloTabelaProdutoMateria.inserirlistaProdutoEstoque(conexaoTabelaProdutoMateria.selecionarTodosProdutosMateria());
        tbListaProdutos.updateUI();
        
        this.setIconImage(icone.getImage());
        
        btSalvarAtualizar.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tfNomeProduto = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cbTipoProduto = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        cbUnidadeMedidaProduto = new javax.swing.JComboBox();
        lbQuantidadeFardoProduto = new javax.swing.JLabel();
        tfQuantFardoProduto = new javax.swing.JTextField();
        btCadastrarProduto = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        pnProdutos = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbListaProdutos = new javax.swing.JTable();
        btRemover = new javax.swing.JButton();
        btAtualizar = new javax.swing.JButton();
        btSalvarAtualizar = new javax.swing.JButton();

        setTitle("CADASTRAR PRODUTO");
        setIconImages(null);
        setResizable(false);

        jLabel1.setText("Nome");

        tfNomeProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfNomeProdutoKeyReleased(evt);
            }
        });

        jLabel2.setText("Tipo");

        cbTipoProduto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Perecivel", "NÃ£o Perecivel" }));

        jLabel3.setText("Unid. Medida");

        cbUnidadeMedidaProduto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Kg", "g", "Ton", "Lt", "ml" }));

        lbQuantidadeFardoProduto.setText("<html>Quantidade Por Fardo</html>");

        tfQuantFardoProduto.setEditable(false);

        btCadastrarProduto.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btCadastrarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/save.png"))); // NOI18N
        btCadastrarProduto.setText("CADASTRAR");
        btCadastrarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadastrarProdutoActionPerformed(evt);
            }
        });

        pnProdutos.setBorder(javax.swing.BorderFactory.createTitledBorder("PRODUTOS"));

        tbListaProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbListaProdutos);

        javax.swing.GroupLayout pnProdutosLayout = new javax.swing.GroupLayout(pnProdutos);
        pnProdutos.setLayout(pnProdutosLayout);
        pnProdutosLayout.setHorizontalGroup(
            pnProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
        );
        pnProdutosLayout.setVerticalGroup(
            pnProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
        );

        btRemover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icones-pequenos-3/delete.png"))); // NOI18N
        btRemover.setText("Remover");
        btRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverActionPerformed(evt);
            }
        });

        btAtualizar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/view_refresh.png"))); // NOI18N
        btAtualizar.setText("Atualizar");
        btAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualizarActionPerformed(evt);
            }
        });

        btSalvarAtualizar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btSalvarAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/save.png"))); // NOI18N
        btSalvarAtualizar.setText("<html>Atualizar Dados</html>");
        btSalvarAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarAtualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(cbTipoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addComponent(cbUnidadeMedidaProduto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(tfNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lbQuantidadeFardoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(tfQuantFardoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btCadastrarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jSeparator1)
                        .addComponent(pnProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btRemover)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSalvarAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btAtualizar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbTipoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(cbUnidadeMedidaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbQuantidadeFardoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfQuantFardoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCadastrarProduto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btAtualizar)
                    .addComponent(btRemover)
                    .addComponent(btSalvarAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCadastrarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadastrarProdutoActionPerformed
        // TODO add your handling code here:
        if(preenchimentoCorretoProdutoMateria())
        {
            JOptionPane.showMessageDialog(rootPane, "PRODUTO "+tfNomeProduto.getText().toUpperCase()+"\nCADASTRADO COM SUCESSO!", "CADASTRO FINALIZADO", WIDTH);
            conexaoTabelaProdutoMateria.inserirProdutoMateria(retornarDadosPreenchidosProdutoMateria());
            limparCamposProdutoMateria();
            tbListaProdutos.updateUI();
            this.dispose();
        }/*else
            if(preenchimentoCorretoProdutoMateria() && btCadastrarProduto.getName().equalsIgnoreCase("btSalvarAtualizar"))
            {
                conexaoTabelaProdutoMateria.atualizarProdutoMateria(retornarDadosPreenchidosProdutoMateria(), produtoMateriaAntigo);
                limparCamposProdutoMateria();
                tbListaProdutos.updateUI();
                this.dispose();
            }*/
    }//GEN-LAST:event_btCadastrarProdutoActionPerformed

    private void tfNomeProdutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNomeProdutoKeyReleased
        // TODO add your handling code here:
        tfNomeProduto.setText(tfNomeProduto.getText().toUpperCase());
    }//GEN-LAST:event_tfNomeProdutoKeyReleased

    private void btRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverActionPerformed
        if(tbListaProdutos.getSelectedRow()!=-1) // Se existe alguma linha selecionada, faÃ§a...
        {
           int resp= JOptionPane.showConfirmDialog(null, "<HTML><b> DESEJA REALEMENTE EXCLUIR</b>?<HTML>", "CONFIRMAÃÃO", 0, 3);
            if(resp==0) 
            {
           // comando gigante para excluir funcionarioAntigo
             conexaoTabelaProdutoMateria.removerProdutoMateria(modeloTabelaProdutoMateria.retornalistaProdutosMateria().get(tbListaProdutos.getSelectedRow()).getIdProdutoMateria(),tbListaProdutos.getValueAt(tbListaProdutos.getSelectedRow(), 0).toString());

             modeloTabelaProdutoMateria.inserirlistaProdutoMateria(conexaoTabelaProdutoMateria.selecionarTodosProdutosMateria());
             tbListaProdutos.updateUI();
         }
       }
    }//GEN-LAST:event_btRemoverActionPerformed

    private void btAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtualizarActionPerformed
        if(tbListaProdutos.getSelectedRow()!=-1) // SE o usuÃ¡rio selecionou uma linha da tabela...
        {
             btCadastrarProduto.setEnabled(false);
             btRemover.setVisible(false); // Tornando visÃ­vel o botÃ£o ATUALIZAR
             btSalvarAtualizar.setVisible(true);// Tornando INVISIVEL o botÃ£o SalvarFornecedor
             btAtualizar.setVisible(false);// TORNA VISIVEL O BOTÃO CANCELAR
             
            
         produtoMateriaAntigo= modeloTabelaProdutoMateria.retornalistaProdutosMateria().get(tbListaProdutos.getSelectedRow());
        
         tfNomeProduto.setText(produtoMateriaAntigo.getNomeProdutoMateria());
         cbTipoProduto.setSelectedItem(produtoMateriaAntigo.getTipoProdutoMateria());
         cbUnidadeMedidaProduto.setSelectedItem(produtoMateriaAntigo.getUnidadeMedidaProdutoMateria());
         }
    }//GEN-LAST:event_btAtualizarActionPerformed

    private void btSalvarAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarAtualizarActionPerformed
        if(preenchimentoCorretoProdutoMateria())
        {
            produtoMateriaNovo = retornarDadosPreenchidosProdutoMateria();
             // Confirmando se o usuÃ¡rio REALMENTE deseja alterar
            int resp = JOptionPane.showConfirmDialog(this, 
                                                                "<HTML>"
                                                                + "<TABLE border='1'> "
                                                                        + "<TR> <TD> <b>DADOS ANTIGOS </b></TD> <TD><b> DADOS NOVOS </TD> </b></TR>"
                                                                        + "<TR> <TD> NOME PRODUTO: "+produtoMateriaAntigo.getNomeProdutoMateria()+" </TD> <TD> NOME PRODUTO: "+produtoMateriaNovo.getNomeProdutoMateria()+" </TD> </TR>"
                                                                        +"<TR> <TD>  TIPO DO PRODUTO: "+produtoMateriaAntigo.getTipoProdutoMateria()+"</TD> <TD> TIPO DO PRODUTO: "+produtoMateriaNovo.getTipoProdutoMateria()+"</TD> </TR>"
                                                                        +"<TR> <TD>  UNIDADE DE MEDIDA: "+produtoMateriaAntigo.getUnidadeMedidaProdutoMateria()+"</TD> <TD> UNIDADE DE MEDIDA: "+produtoMateriaNovo.getUnidadeMedidaProdutoMateria()+"</TD> </TR>"
                                                                        + "</TABLE>"
                                                                        + "</HTML>", 
                                                    "ALTERAÃÃO DE DADOS EMINENTE",     1);
            // Se o usuÃ¡rio pressionar SIM, atualizarÃ¡ os dados
        if( resp == 0)
        {
                conexaoTabelaProdutoMateria.atualizarProdutoMateria(retornarDadosPreenchidosProdutoMateria(), produtoMateriaAntigo);
                
                modeloTabelaProdutoMateria.inserirlistaProdutoMateria(conexaoTabelaProdutoMateria.selecionarTodosProdutosMateria()); 
                tbListaProdutos.updateUI();
                
                tfNomeProduto.setText("");
                cbTipoProduto.setSelectedItem("Perecivel");
                cbUnidadeMedidaProduto.setSelectedItem("Kg");
                
                btCadastrarProduto.setEnabled(true);
                btRemover.setVisible(true);
                btSalvarAtualizar.setVisible(false);
                btAtualizar.setVisible(true);
                
        }else
            if(resp==1)// se precionar NÃO, manter a tela  preenchida
                {
                            btCadastrarProduto.setEnabled(false);
                            btRemover.setVisible(false);
                            btSalvarAtualizar.setVisible(true);
                            btAtualizar.setVisible(false);
                } else
                  {
                    if(resp==2)// se precionar CANCELAR, limpar campos e voltar para aba original
                    {  
                            tfNomeProduto.setText("");
                            cbTipoProduto.setSelectedItem("Perecivel");
                            cbUnidadeMedidaProduto.setSelectedItem("Kg");
                
                            btSalvarAtualizar.setVisible(false);
                            btCadastrarProduto.setVisible(true);
                            btRemover.setVisible(true);
                            this.dispose();
                    }
                }   
        }
    }//GEN-LAST:event_btSalvarAtualizarActionPerformed

    /***
     * VERIFICAR SE FOI INSERIDO O NOME DO PRODUTO-MATERIA PRIMA.
     * @return 
     */
    public boolean preenchimentoCorretoProdutoMateria()
    {
        if(tfNomeProduto.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(rootPane, "PREENCHA O NOME DO NOVO PRODUTO", "DADOS INCOMPLETOS", WIDTH);
            tfNomeProduto.requestFocus();
            return false;
        }else
            {
              return true;
            }
    }
    
    /***
     * RETORNA OS DADOS PREENCHIDOS, PARA A FUNÃÃO INSERIDA NO BOTÃO 
     * SALVAR[CADASTRAR]
     * @return 
     */
    public ProdutoMateria retornarDadosPreenchidosProdutoMateria()
    {
        ProdutoMateria novoProdutoMateria=new ProdutoMateria();
        
        novoProdutoMateria.setNomeProdutoMateria(tfNomeProduto.getText());
        novoProdutoMateria.setTipoProdutoMateria((String) cbTipoProduto.getSelectedItem());
        novoProdutoMateria.setUnidadeMedidaProdutoMateria((String) cbUnidadeMedidaProduto.getSelectedItem());
        
        return novoProdutoMateria;
    }
    
    /***
     * LIMPAR OS CAMPOS DA TELA ANTES DE FECHA-LA.
     */
    public void limparCamposProdutoMateria()
    {
        tfNomeProduto.setText("");
        cbTipoProduto.setSelectedIndex(1); // SELECIONADO 'PERECIVEL'
        cbUnidadeMedidaProduto.setSelectedIndex(1); // SELECIONANDO 'KG'
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCadastrarProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCadastrarProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCadastrarProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCadastrarProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaCadastrarProduto dialog = new TelaCadastrarProduto(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAtualizar;
    private javax.swing.JButton btCadastrarProduto;
    private javax.swing.JButton btRemover;
    private javax.swing.JButton btSalvarAtualizar;
    private javax.swing.JComboBox cbTipoProduto;
    private javax.swing.JComboBox cbUnidadeMedidaProduto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbQuantidadeFardoProduto;
    private javax.swing.JPanel pnProdutos;
    private javax.swing.JTable tbListaProdutos;
    private javax.swing.JTextField tfNomeProduto;
    private javax.swing.JTextField tfQuantFardoProduto;
    // End of variables declaration//GEN-END:variables
}
