/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package interfaces;

import bancodados.PizzaBD;
import bancodados.ProdutoMateriaBD;
import java.io.File;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import modelo.classes.Pizza;
import modelo.classes.ProdutoMateria;
import modelo.tabelas.ModeloTabelaPizza;
import modelo.tabelas.ModeloTabelaPizzaIngrediente;

/**
 *
 * @author alunov2
 */
public class TelaPizza extends javax.swing.JDialog {

    /* CRIAR CONEXÃO COM AS TABELAS */
    ProdutoMateriaBD conexaoProdutoMateria=new ProdutoMateriaBD();
    PizzaBD conexaoPizza=new PizzaBD();
    ProdutoMateriaBD conexaoTabelaProdutoMateria=new ProdutoMateriaBD();
    
    /* DEFINIDO MODELO DE TABELA A SER UTILIZADO */
    ModeloTabelaPizza modeloTabelaPizza=new ModeloTabelaPizza();
    ModeloTabelaPizzaIngrediente modeloTabelaPizzaIngrediente=new ModeloTabelaPizzaIngrediente();
    
    /* DEFININDO TAMANHO DO cbIngrediente(1...12) */
    int base=40, altura=20;
    
    // Criando uma lista de produtos/matéria cadastrados
    ArrayList<ProdutoMateria> listaProdutosMateria = new ArrayList();
    ArrayList<Pizza> listaTemporariaPizza1 = new ArrayList();
    ArrayList<Pizza> listaTemporariaPizza = new ArrayList();
    
    // LOCKS para comboBox
    boolean lock_cbIngredientes = true;
    
    /* ADICIONANDO ICONE AO PROGRAMA */
    ImageIcon icone = new ImageIcon(getClass().getResource("/imagens/pizza.png"));
    
    JCheckBox csIngrediente=new JCheckBox();
    Pizza pizzaNova=null;
    Pizza pizzaAntiga=null;
    
    
    /**
     * Creates new form TelaPizza
     */
    public TelaPizza(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        
        initComponents();
        
        this.setSize(728, 640);
        
        this.setLocationRelativeTo(null);
        
        this.setIconImage(icone.getImage());
        
        this.setTitle("CADASTRAR/GERENCIAR SABOR DE PIZZAS");
        
        lbImagemAqui.setVisible(false);
        jLabel3.setVisible(false);
        btImagem.setVisible(false);
        /* ADICIONANDO IMAGES DE PIZZAS */
        
        preencherIngredientes();
        
        // Destrancando os comboBoxes
        lock_cbIngredientes = false;
        
        modeloTabelaPizza.inserirlistaPizza(conexaoPizza.selecionarTodasPizzas());
        tbListaPizza.updateUI();
        tbListaPizza.setModel(modeloTabelaPizza);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fcImagem = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        pnIngredientes = new javax.swing.JPanel();
        cbIngrediente1 = new javax.swing.JComboBox();
        cbIngrediente2 = new javax.swing.JComboBox();
        cbIngrediente3 = new javax.swing.JComboBox();
        cbIngrediente4 = new javax.swing.JComboBox();
        cbIngrediente5 = new javax.swing.JComboBox();
        cbIngrediente6 = new javax.swing.JComboBox();
        cbIngrediente7 = new javax.swing.JComboBox();
        cbIngrediente8 = new javax.swing.JComboBox();
        cbIngrediente9 = new javax.swing.JComboBox();
        cbIngrediente10 = new javax.swing.JComboBox();
        cbIngrediente11 = new javax.swing.JComboBox();
        cbIngrediente12 = new javax.swing.JComboBox();
        btSalvar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfNomePizza = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cbTamFatias = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        btImagem = new javax.swing.JButton();
        lbImagemAqui = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        tfBuscaPizza = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbListaPizza = new javax.swing.JTable();
        btRemoverPizza = new javax.swing.JButton();
        btAtualizarPizza = new javax.swing.JButton();
        btRelatorioPizza = new javax.swing.JButton();

        fcImagem.setDialogTitle("SELECIONE UMA IMAGEM PARA A PIIZZA");
        fcImagem.setFileFilter(new filtroArquivo());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnIngredientes.setBorder(javax.swing.BorderFactory.createTitledBorder("SELECIONE OS INGREDIENTES"));

        cbIngrediente1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbIngrediente2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbIngrediente3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbIngrediente4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbIngrediente5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbIngrediente6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbIngrediente7.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbIngrediente8.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbIngrediente9.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbIngrediente10.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbIngrediente11.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbIngrediente12.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout pnIngredientesLayout = new javax.swing.GroupLayout(pnIngredientes);
        pnIngredientes.setLayout(pnIngredientesLayout);
        pnIngredientesLayout.setHorizontalGroup(
            pnIngredientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnIngredientesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnIngredientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbIngrediente1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbIngrediente3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbIngrediente5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbIngrediente7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbIngrediente9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbIngrediente11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(pnIngredientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbIngrediente12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbIngrediente10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbIngrediente8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbIngrediente6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbIngrediente4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbIngrediente2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnIngredientesLayout.setVerticalGroup(
            pnIngredientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnIngredientesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnIngredientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbIngrediente1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbIngrediente2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnIngredientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbIngrediente3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbIngrediente4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnIngredientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbIngrediente5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbIngrediente6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnIngredientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbIngrediente7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbIngrediente8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnIngredientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbIngrediente9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbIngrediente10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnIngredientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbIngrediente11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbIngrediente12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(77, Short.MAX_VALUE))
        );

        btSalvar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/save.png"))); // NOI18N
        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("INFORMAÇÕES BASICAS"));

        jLabel1.setText("Nome Pizza");

        tfNomePizza.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfNomePizzaFocusLost(evt);
            }
        });
        tfNomePizza.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfNomePizzaKeyReleased(evt);
            }
        });

        jLabel2.setText("Tam./Fatias");

        cbTamFatias.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "P - 4", "M - 8", "G- 16", "GG-32" }));
        cbTamFatias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTamFatiasActionPerformed(evt);
            }
        });

        jLabel3.setText("Imagem");

        btImagem.setText("Selecionar");
        btImagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btImagemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cbTamFatias, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btImagem, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE))
                    .addComponent(tfNomePizza, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfNomePizza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbTamFatias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(btImagem))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lbImagemAqui.setText("ImagemAqui");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btSalvar)
                        .addGap(30, 30, 30)
                        .addComponent(lbImagemAqui, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(pnIngredientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnIngredientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSalvar)
                    .addComponent(lbImagemAqui, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("NOVO SABOR", jPanel1);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("FILTRO DE BUSCA"));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/search.PNG"))); // NOI18N
        jLabel8.setText("PALAVRA-CHAVE");

        tfBuscaPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfBuscaPizzaActionPerformed(evt);
            }
        });
        tfBuscaPizza.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfBuscaPizzaKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(tfBuscaPizza)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tfBuscaPizza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("PIZZAS CADASTRADAS"));

        tbListaPizza.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tbListaPizza);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 613, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        btRemoverPizza.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icones-pequenos-3/delete.png"))); // NOI18N
        btRemoverPizza.setText("<HTML> Remover Pizza</html>");
        btRemoverPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverPizzaActionPerformed(evt);
            }
        });

        btAtualizarPizza.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btAtualizarPizza.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/view_refresh.png"))); // NOI18N
        btAtualizarPizza.setText("<HTML> Atualizar Pizza</html>");
        btAtualizarPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualizarPizzaActionPerformed(evt);
            }
        });

        btRelatorioPizza.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icones-pequenos-3/report.png"))); // NOI18N
        btRelatorioPizza.setText("<HTML> Visualizar Ingredientes Da Pizza</html>");
        btRelatorioPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRelatorioPizzaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(btRelatorioPizza, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btRemoverPizza, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btAtualizarPizza, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btRemoverPizza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btAtualizarPizza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btRelatorioPizza, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("GERENCIAR PIZZAS", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btImagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btImagemActionPerformed
        fcImagem.setVisible(true);
        JFileChooser selecionarImagem = new JFileChooser(); 
        FileNameExtensionFilter filtro =  new FileNameExtensionFilter("Imagens", "jpg", "png", "jpeg", "bitmap");
        selecionarImagem.setFileFilter(filtro);      
        selecionarImagem.setAcceptAllFileFilterUsed(false);    
        
        File file = new File("user.dir"); 

        int option = selecionarImagem.showOpenDialog(null); 

        if(option == JFileChooser.APPROVE_OPTION) { 
         ImageIcon image = new ImageIcon(selecionarImagem.getSelectedFile().getPath());  
        // lbImagemAqui.setIcon(new ImageIcon(image.getImage().getScaledInstance(lbImagemAqui.getWidth(),lbImagemAqui.getHeight(),Image.SCALE_DEFAULT)));
          
        //ImageIcon image = new ImageIcon(file.getPath()); 

        int height = image.getIconHeight(); 
        int width = image.getIconWidth(); 

        lbImagemAqui.setSize(height, width); 
        lbImagemAqui.setIcon(image);
        lbImagemAqui.repaint();
        lbImagemAqui.setText("");
        lbImagemAqui.setVisible(true);
        
        } 
        else { 
        JOptionPane.showMessageDialog(this, "VOCÊ NÃO SELECIONOU NENHUMA IMAGEM!"); 
        } 
    }//GEN-LAST:event_btImagemActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        if(preenchimentoCorretoPizza())
        {
            conexaoPizza.inserirPizza(retornarDadosPreenchidos());
            modeloTabelaPizza.inserirlistaPizza(conexaoPizza.selecionarTodasPizzas());
            tbListaPizza.updateUI();
        }
    }//GEN-LAST:event_btSalvarActionPerformed

    private void tfNomePizzaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNomePizzaKeyReleased
        tfNomePizza.setText(tfNomePizza.getText().toUpperCase());
    }//GEN-LAST:event_tfNomePizzaKeyReleased

    private void tfNomePizzaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNomePizzaFocusLost
        tfNomePizza.setCaretPosition(0);
    }//GEN-LAST:event_tfNomePizzaFocusLost

    private void tfBuscaPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfBuscaPizzaActionPerformed
        conexaoPizza.selecionarTodasPizzas();
    }//GEN-LAST:event_tfBuscaPizzaActionPerformed

    private void tfBuscaPizzaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBuscaPizzaKeyReleased
        ArrayList<Pizza> listaTemporariaPizza2 = new ArrayList();
        ArrayList<Pizza> listaOriginal = conexaoPizza.selecionarTodasPizzas();
        
         for(int i=0; i<listaOriginal.size(); i++)
         {
             if(listaOriginal.get(i).getNomePizza().toLowerCase().contains(tfBuscaPizza.getText().toLowerCase()))
             {
                 listaTemporariaPizza2.add(listaOriginal.get(i));
             }
            
         }
        modeloTabelaPizza.inserirlistaPizza(listaTemporariaPizza2); 
        tbListaPizza.updateUI();
    }//GEN-LAST:event_tfBuscaPizzaKeyReleased

    private void btRelatorioPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRelatorioPizzaActionPerformed
        relatorio("listaTemporaria");
    }//GEN-LAST:event_btRelatorioPizzaActionPerformed

    private void btRemoverPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverPizzaActionPerformed
        // TODO add your handling code here:
        if(tbListaPizza.getSelectedRow()!=-1){
         int resp = JOptionPane.showConfirmDialog(null,"<HTML><b>DESEJA REALEMENTE EXCLUIR</b>?<HTML>","CONFIRMAÇÃO",0,3 );
           if(resp==0) {
             // Excluido Pizza  
            conexaoPizza.deletarPizza(modeloTabelaPizza.retornalistaPizzas().get(tbListaPizza.getSelectedRow()).getIdPizza(), tbListaPizza.getValueAt(tbListaPizza.getSelectedRow(),0).toString());
            modeloTabelaPizza.inserirlistaPizza(conexaoPizza.selecionarTodasPizzas());
            tbListaPizza.updateUI();
           }
        
        else
           {
               
           }}
       
    }//GEN-LAST:event_btRemoverPizzaActionPerformed

    private void btAtualizarPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtualizarPizzaActionPerformed
        // TODO add your handling code here:
        
       /* if(preenchimentoCorretoPizza()){
         pizzaNova = retornarDadosPreenchidos();
         
         
        }*/
       
    }//GEN-LAST:event_btAtualizarPizzaActionPerformed

    private void cbTamFatiasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTamFatiasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTamFatiasActionPerformed

    public void relatorio(String modoRelatorio)
    {
        int posicaoSelecionada;
            switch(modoRelatorio)
            {
                case "listaTemporaria":
                        /* CASO O RELATORIO SEJA REALIZADO PELA LISTA ORIGINAL */
                    listaTemporariaPizza = conexaoPizza.selecionarTodasPizzas();

                    if(tbListaPizza.getSelectedRow()!=-1) // Se existe alguma linha selecionada, faça...
                    {
                        posicaoSelecionada=tbListaPizza.getSelectedRow();
                        System.out.println(listaTemporariaPizza1.size());
                           JOptionPane.showMessageDialog(this, 
                            "<HTML>"
                           +"<CENTER> -- <b> DADOS DA PIZZA -- </b><br><br></CENTER>"
                           +"<table>"
                           +"<tr><td><b>SABOR PIZZA  :</b></td> <td>"+listaTemporariaPizza.get(posicaoSelecionada).getNomePizza()+"</td></tr>"
                           +"<tr><td><b>INGREDIENTE 1:</b></td> <td>"+listaTemporariaPizza.get(posicaoSelecionada).getIngrediente1()+"</td></tr>"
                           +"<tr><td><b>INGREDIENTE 2:</b></td> <td>"+listaTemporariaPizza.get(posicaoSelecionada).getIngrediente2()+"</td></tr>"
                           +"<tr><td><b>INGREDIENTE 3:</b></td> <td>"+listaTemporariaPizza.get(posicaoSelecionada).getIngrediente3()+"</td></tr>"
                           +"<tr><td><b>INGREDIENTE 4:</b></td> <td>"+listaTemporariaPizza.get(posicaoSelecionada).getIngrediente4()+"</td></tr>"
                           +"<tr><td><b>INGREDIENTE 5:</b></td> <td>"+listaTemporariaPizza.get(posicaoSelecionada).getIngrediente5()+"</td></tr>"
                           +"<tr><td><b>INGREDIENTE 6:</b></td> <td>"+listaTemporariaPizza.get(posicaoSelecionada).getIngrediente6()+"</td></tr>"
                           +"<tr><td><b>INGREDIENTE 7:</b></td> <td>"+listaTemporariaPizza.get(posicaoSelecionada).getIngrediente7()+"</td></tr>"
                           +"<tr><td><b>INGREDIENTE 7:</b></td> <td>"+listaTemporariaPizza.get(posicaoSelecionada).getIngrediente8()+"</td></tr>"
                           +"<tr><td><b>INGREDIENTE 9:</b></td> <td>"+listaTemporariaPizza.get(posicaoSelecionada).getIngrediente9()+"</td></tr>"
                           +"<tr><td><b>INGREDIENTE 10:</b></td> <td>"+listaTemporariaPizza.get(posicaoSelecionada).getIngrediente10()+"</td></tr>"
                           +"<tr><td><b>INGREDIENTE 11:</b></td> <td>"+listaTemporariaPizza.get(posicaoSelecionada).getIngrediente11()+"</td></tr>"
                           +"<tr><td><b>INGREDIENTE 12:</b></td> <td>"+listaTemporariaPizza.get(posicaoSelecionada).getIngrediente12()+"</td></tr>"
                           +"<tr><td><b>TAMANHO E NÚMERO DE FATIAS:</b></td> <td>"+listaTemporariaPizza.get(posicaoSelecionada).getTamFatia()+"</td></tr>"
                           +"</table></html>"
                           );
                    }else
                    {
                         JOptionPane.showMessageDialog(this, listaTemporariaPizza.size());
                    }
                    break;
            }
    }
    public boolean preenchimentoCorretoPizza()
    {
        if(tfNomePizza.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "PREENCHA O NOME DA PIZZA", "DADOS INCOMPLETOS", 2);
            tfNomePizza.requestFocus();
            return false;
        }else
            /*
            if(lbImagemAqui.getText().equals("ImagemAqui"))
            {
                JOptionPane.showMessageDialog(this, "SELECIONE UMA IMAGEM DE PIZZA", "DADOS INCOMPLETOS", 2);
                btImagem.requestFocus();
                return false;
            }else
            */
            {
                return true;
            }
    }
    
    public Pizza retornarDadosPreenchidos()
    {
        Pizza novaPizza=new Pizza();
        
        novaPizza.setNomePizza(tfNomePizza.getText());
                /* ADICIONANDO INGREDIENTES */
        novaPizza.setIngrediente1(cbIngrediente1.getSelectedItem().toString());
        novaPizza.setIngrediente2(cbIngrediente2.getSelectedItem().toString());
        novaPizza.setIngrediente3(cbIngrediente3.getSelectedItem().toString());
        novaPizza.setIngrediente4(cbIngrediente4.getSelectedItem().toString());
        novaPizza.setIngrediente5(cbIngrediente5.getSelectedItem().toString());
        novaPizza.setIngrediente6(cbIngrediente6.getSelectedItem().toString());
        novaPizza.setIngrediente7(cbIngrediente7.getSelectedItem().toString());
        novaPizza.setIngrediente8(cbIngrediente8.getSelectedItem().toString());
        novaPizza.setIngrediente9(cbIngrediente9.getSelectedItem().toString());
        novaPizza.setIngrediente10(cbIngrediente10.getSelectedItem().toString());
        novaPizza.setIngrediente11(cbIngrediente11.getSelectedItem().toString());
        novaPizza.setIngrediente12(cbIngrediente12.getSelectedItem().toString());
        novaPizza.setTamFatia(cbTamFatias.getSelectedItem().toString());
// DA ERRO NESTE PONTO        novaPizza.setImagem((Blob) lbImagemAqui.getIcon());
        return novaPizza;
    }
    /***
     * INSERINDO PRODUTOSMATERIA NO 'CBNOMEPRODUTO'.
     */
    public void preencherIngredientes()
    {
        /* REMOVENDO TODOS OS ITENS ANTERIORES */
            cbIngrediente1.removeAllItems();
            cbIngrediente2.removeAllItems();
            cbIngrediente3.removeAllItems();
            cbIngrediente4.removeAllItems();
            cbIngrediente5.removeAllItems();
            cbIngrediente6.removeAllItems();
            cbIngrediente7.removeAllItems();
            cbIngrediente8.removeAllItems();
            cbIngrediente9.removeAllItems();
            cbIngrediente10.removeAllItems();
            cbIngrediente11.removeAllItems();
            cbIngrediente12.removeAllItems();
            
        int i; // produto selecionado
        listaProdutosMateria = conexaoTabelaProdutoMateria.selecionarTodosProdutosMateria();
        
        for(i=0; i<listaProdutosMateria.size(); i++)
        {
                /* ADICIONANDO ITENS A LISTA DE INGREDIENTES */
            cbIngrediente1.addItem(listaProdutosMateria.get(i).getNomeProdutoMateria());
            cbIngrediente1.setSize(base, altura);
        }
        
        for(i=0; i<listaProdutosMateria.size(); i++)
        {
                /* ADICIONANDO ITENS A LISTA DE INGREDIENTES */
            cbIngrediente2.addItem(listaProdutosMateria.get(i).getNomeProdutoMateria()); 
            cbIngrediente2.setSize(base, altura);
        }
        
        for(i=0; i<listaProdutosMateria.size(); i++)
        {
                /* ADICIONANDO ITENS A LISTA DE INGREDIENTES */
            cbIngrediente3.addItem(listaProdutosMateria.get(i).getNomeProdutoMateria()); 
            cbIngrediente3.setSize(base, altura);
        }
        
        for(i=0; i<listaProdutosMateria.size(); i++)
        {
                /* ADICIONANDO ITENS A LISTA DE INGREDIENTES */
            cbIngrediente4.addItem(listaProdutosMateria.get(i).getNomeProdutoMateria()); 
            cbIngrediente4.setSize(base, altura);
        }
        
        for(i=0; i<listaProdutosMateria.size(); i++)
        {
                /* ADICIONANDO ITENS A LISTA DE INGREDIENTES */
            cbIngrediente5.addItem(listaProdutosMateria.get(i).getNomeProdutoMateria()); 
            cbIngrediente5.setSize(base, altura);
        }
        
        for(i=0; i<listaProdutosMateria.size(); i++)
        {
                /* ADICIONANDO ITENS A LISTA DE INGREDIENTES */
            cbIngrediente6.addItem(listaProdutosMateria.get(i).getNomeProdutoMateria()); 
            cbIngrediente6.setSize(base, altura);
        }
        
        for(i=0; i<listaProdutosMateria.size(); i++)
        {
                /* ADICIONANDO ITENS A LISTA DE INGREDIENTES */
            cbIngrediente7.addItem(listaProdutosMateria.get(i).getNomeProdutoMateria()); 
            cbIngrediente7.setSize(base, altura);
        }
        
        for(i=0; i<listaProdutosMateria.size(); i++)
        {
                /* ADICIONANDO ITENS A LISTA DE INGREDIENTES */
            cbIngrediente8.addItem(listaProdutosMateria.get(i).getNomeProdutoMateria()); 
            cbIngrediente8.setSize(base, altura);
       }
        
        for(i=0; i<listaProdutosMateria.size(); i++)
        {
                /* ADICIONANDO ITENS A LISTA DE INGREDIENTES */
            cbIngrediente9.addItem(listaProdutosMateria.get(i).getNomeProdutoMateria()); 
            cbIngrediente9.setSize(base, altura);
        }
        
        for(i=0; i<listaProdutosMateria.size(); i++)
        {
                /* ADICIONANDO ITENS A LISTA DE INGREDIENTES */
            cbIngrediente10.addItem(listaProdutosMateria.get(i).getNomeProdutoMateria()); 
            cbIngrediente10.setSize(base, altura);
        }
        
        for(i=0; i<listaProdutosMateria.size(); i++)
        {
                /* ADICIONANDO ITENS A LISTA DE INGREDIENTES */
            cbIngrediente11.addItem(listaProdutosMateria.get(i).getNomeProdutoMateria()); 
            cbIngrediente11.setSize(base, altura);
        }
        
        for(i=0; i<listaProdutosMateria.size(); i++)
        {
                /* ADICIONANDO ITENS A LISTA DE INGREDIENTES */
            cbIngrediente12.addItem(listaProdutosMateria.get(i).getNomeProdutoMateria()); 
            cbIngrediente12.setSize(base, altura);
        }
        
    }
    
    public class filtroArquivo extends javax.swing.filechooser.FileFilter {
        @Override
        public boolean accept(File file) {
            // Allow only directories, or files with ".txt" extension
            return file.isDirectory() || file.getAbsolutePath().endsWith(".JPEG") || file.getAbsolutePath().endsWith(".PNG");
        }
        @Override
        public String getDescription() {
            // This description will be displayed in the dialog,
            // hard-coded = ugly, should be done via I18N
            return "Imagem (*.jpeg *.png *.bmp)";
        }
    } 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPizza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPizza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPizza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPizza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaPizza dialog = new TelaPizza(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAtualizarPizza;
    private javax.swing.JButton btImagem;
    private javax.swing.JButton btRelatorioPizza;
    private javax.swing.JButton btRemoverPizza;
    private javax.swing.JButton btSalvar;
    private javax.swing.JComboBox cbIngrediente1;
    private javax.swing.JComboBox cbIngrediente10;
    private javax.swing.JComboBox cbIngrediente11;
    private javax.swing.JComboBox cbIngrediente12;
    private javax.swing.JComboBox cbIngrediente2;
    private javax.swing.JComboBox cbIngrediente3;
    private javax.swing.JComboBox cbIngrediente4;
    private javax.swing.JComboBox cbIngrediente5;
    private javax.swing.JComboBox cbIngrediente6;
    private javax.swing.JComboBox cbIngrediente7;
    private javax.swing.JComboBox cbIngrediente8;
    private javax.swing.JComboBox cbIngrediente9;
    private javax.swing.JComboBox cbTamFatias;
    private javax.swing.JFileChooser fcImagem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbImagemAqui;
    private javax.swing.JPanel pnIngredientes;
    private javax.swing.JTable tbListaPizza;
    private javax.swing.JTextField tfBuscaPizza;
    private javax.swing.JTextField tfNomePizza;
    // End of variables declaration//GEN-END:variables
}